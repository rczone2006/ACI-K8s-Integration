---
#- hosts: localhost
#  gather_facts: false
#  vars_files:
#    - gvar.yml
#  tasks:
#  - name: deploy ACI
#    command: 'acc-provision --flavor=kubernetes-1.21 -a -u admin -p ins3965! -c aci-fabric.yaml -o aci-cni.yaml' 
#  environment: "{{proxy_env}}"  

#--------- deploy VMs
- hosts: vmware
  serial: 1
  gather_facts: false
  vars_files:
    - gvar.yml
  roles:
     - deploy-vm

  tasks:
  - name: Wait  for port 22 to become open
    wait_for:
      port: 22
      host: '{{ guest_custom_ip }}'
      delay: 10
    connection: local


 #------- perpare nodes network
- hosts: network
  gather_facts: false
  vars_files:
     - gvar.yml
  tasks:
  - name: copy script to local host
    copy: 
      src: ~/aci-kube/config-net.py
      dest: '{{home_dir_dst}}/config-net.py'
  - name: copy template  
    copy: 
      src: ~/aci-kube/interface-template.yml
      dest: '{{home_dir_dst}}/interface-template.yml'


  - name: run py script
    command: /usr/bin/python3  {{home_dir_dst}}/config-net.py {{ ip }} {{ node }} {{ vlan }} 10
    register: output
  - set_fact:
          mackey: output.stdout[1:-1] 
  - debug: 
        var: output.stdout

  - name: modify dhcp.conf
    lineinfile:
         backup: no
         backrefs: yes
         state: present
         path: '/etc/dhcp/dhclient.conf'
         regexp: '^(\s*)[#]?{{ item.search }}(: )*'
         line: '\1{{ item.replace }}'
    with_items:
         - { search: 'send dhcp-client-identifier', replace: 'send dhcp-client-identifier 01:{{ output.stdout }}' }  
  - name: restart network
    shell: |
            rm -f /etc/netplan/*vmware*
            cp  '{{home_dir_dst}}/interface-template.yml'  /etc/netplan/00-installer-config.yaml 
            netplan apply

  - name: Wait  for port 22 to become open
    wait_for:
      port: 22
      delay: 10
    connection: local

- hosts: master
  gather_facts: false
  vars_files:
    - gvar.yml
  roles:
     - config-master
  handlers:
    - name: docker status
      service: name=docker state=started
  environment: "{{proxy_env}}"
- hosts: node
  gather_facts: false
  vars_files:
    - gvar.yml
  roles:
     - config-worker
  handlers:
    - name: docker status
      service: name=docker state=started
  environment: "{{proxy_env}}"
   
#------- apply cni-----       
- hosts: master
  gather_facts: false
  vars_files:
    - gvar.yml
  tasks:
  - name: copy script to local host
    become: yes
    copy:
      src: ~/aci-kube/aci-cni.yaml
      dest: '{{home_dir_dst}}/aci-cni.yaml'
  - name: apply cni config
    become: yes
    become_user: labtest
    command: kubectl apply -f aci-cni.yaml
       
  environment: "{{proxy_env}}"
   
