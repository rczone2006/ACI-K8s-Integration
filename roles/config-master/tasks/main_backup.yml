  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - docker status

  - name: Add labtest user to docker group
    shell: |
        sudo usermod -aG docker $USER
        sudo systemctl daemon-reload
        sudo systemctl restart docker.service

  - name: Log into DockerHub
    docker_login:
     username: rczone2006
     password: ins3965!2

  #--------------
  
  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    #when: ansible_swaptotal_mb > 0


    #--------------
    #
  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl

          # - name: Configure node ip
          #lineinfile:
          #path: /etc/default/kubelet
          #line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted
      #
      #---- initilize#---- initilize#---- initilize   
  - name: Initialize the Kubernetes cluster using kubeadm
    shell: 
        sudo kubeadm init --apiserver-advertise-address=10.81.0.10 --pod-network-cidr=10.82.0.1/16 --service-cidr 10.86.0.1/16 --upload-certs

    #-------
    #

  - name: Setup kubeconfig for labtest  user
    command: "{{ item }}"
    with_items:
     - mkdir -p $HOME/.kube
     - cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
     - chown sudo chown $(id -u):$(id -g) $HOME/.kube/config

  #---------------
  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"


  


