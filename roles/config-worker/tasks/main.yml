  - name: apt list update
    become: yes
    command: apt-get install --fix-missing
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
    environment:
       http_proxy: 'http://proxy.esl.cisco.com:80'
       https_proxy: 'http://proxy.esl.cisco.com:80'  

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - docker status

  - name: Add labtest user to docker group
    shell: |
        sudo usermod -aG docker $USER
        sudo systemctl daemon-reload
        sudo systemctl restart docker.service

  - name: install docker-py
    become: yes
    shell: 
        "pip install --proxy=http://proxy.esl.cisco.com:80 docker-py"

  - name: Log into DockerHub
    docker_login:
     username: rczone2006
     password: ins3965!2

  #--------------
  
  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present
    environment:
      http_proxy: http://proxy.esl.cisco.com:80
      https_proxy: http://proxy.esl.cisco.com:80
  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl

  - name: Log into DockerHub
    become: yes
    become_user: labtest
    docker_login:
      username: rczone2006
      password: ins3965!2
      #---- join cluster---  
                                         
  - name: Copy the join command to server location
    copy:
      src: /home/labtest/aci-kube/join-command
      dest: /tmp/join-command.sh
      mode: 0777 

  - name: Join the node to cluster
    command: sh /tmp/join-command.sh    

  
